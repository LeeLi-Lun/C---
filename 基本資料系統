
#include "stdafx.h"
#include <stdio.h>

struct person {
   int number;
   char lastName[ 15 ]; 
   char firstName[ 15 ];  
   char age[4];
};                 
 
unsigned int enterChoice( void );
void setFile( FILE *readPtr );
void updateRecord( FILE *fPtr );
void newRecord( FILE *fPtr );
void deleteRecord( FILE *fPtr );

int main( void ){ 

	FILE *cfPtr;
    unsigned int choice;

   if ( ( cfPtr = fopen( "nameage.dat", "w" ) ) == NULL ) {
      puts( "File could not be opened." );
   } 
   else { 
	   setFile( cfPtr );
   
      while ( ( choice = enterChoice() ) != 4 ) { 
        
		  switch ( choice ) {           
            case 1:updateRecord( cfPtr );break;
            case 2:newRecord( cfPtr ); break;
            case 3: deleteRecord( cfPtr );break;
            default:
               puts( "Incorrect choice" );
               break;
         } 
      } 

      fclose( cfPtr ); 
   } 
}

void setFile( FILE *readPtr ){ 

   FILE *writePtr;  
   size_t i;
   struct person man = { 0, "unassign", "", "0"};
  
   if ( ( writePtr = fopen( "nameage.dat", "w" ) ) == NULL ) {
      puts( "File could not be opened." );
   } 
      else { 
		  for(i = 0; i < 100; i++){
		  
		  }
      
      fclose( writePtr); 
   } 
 
} 



void updateRecord( FILE *fPtr )

{ 
   unsigned int account; 
   double transaction; 

 
   struct clientData client = { 0, "", "", 0.0 };

 
   printf( "%s", "Enter account to update ( 1 - 100 ): " );
   scanf( "%d", &account );

            
   fseek( fPtr, ( account - 1 ) * sizeof( struct clientData ), 
      SEEK_SET );                                              


   fread( &client, sizeof( struct clientData ), 1, fPtr );

  
   if ( client.acctNum == 0 ) {
      printf( "Account #%d has no information.\n", account );
   } 
   else { 
      printf( "%-6d%-16s%-11s%10.2f\n\n", 
         client.acctNum, client.lastName, 
         client.firstName, client.balance );
    
      printf( "%s", "Enter charge ( + ) or payment ( - ): " );
      scanf( "%lf", &transaction );
      client.balance += transaction; 
      
      printf( "%-6d%-16s%-11s%10.2f\n", 
         client.acctNum, client.lastName, 
         client.firstName, client.balance );
      
                  
      fseek( fPtr, ( account - 1 ) * sizeof( struct clientData ), 
         SEEK_SET );                                              

            
      fwrite( &client, sizeof( struct clientData ), 1, fPtr );
   }
} 


void deleteRecord( FILE *fPtr )
{ 
   struct clientData client; 
   struct clientData blankClient = { 0, "", "", 0 }; 
   
   unsigned int accountNum; 

  
   printf( "%s", "Enter account number to delete ( 1 - 100 ): " );
   scanf( "%d", &accountNum );

              
   fseek( fPtr, ( accountNum - 1 ) * sizeof( struct clientData ), 
      SEEK_SET );                                                 

                               
   fread( &client, sizeof( struct clientData ), 1, fPtr );

  
   if ( client.acctNum == 0 ) {
      printf( "Account %d does not exist.\n", accountNum );
   }
   else { 
                      
      fseek( fPtr, ( accountNum - 1 ) * sizeof( struct clientData ), 
         SEEK_SET );                                                 

       
      fwrite( &blankClient,                          
         sizeof( struct clientData ), 1, fPtr );     
   } 
} 


void newRecord( FILE *fPtr )
{ 
  
   struct clientData client = { 0, "", "", 0.0 };

   unsigned int accountNum; 

  
   printf( "%s", "Enter new account number ( 1 - 100 ): " );
   scanf( "%d", &accountNum );

                 
   fseek( fPtr, ( accountNum - 1 ) * sizeof( struct clientData ), 
      SEEK_SET );                                                 

                             
   fread( &client, sizeof( struct clientData ), 1, fPtr );

   
   if ( client.acctNum != 0 ) {
      printf( "Account #%d already contains information.\n",
         client.acctNum );
   } 
   else { 
     
      printf( "%s", "Enter lastname, firstname, balance\n? " );
      scanf( "%14s%9s%lf", &client.lastName, &client.firstName, 
         &client.balance );

      client.acctNum = accountNum;
      
        
      fseek( fPtr, ( client.acctNum - 1 ) *            
         sizeof( struct clientData ), SEEK_SET );      

                           
      fwrite( &client,                               
         sizeof( struct clientData ), 1, fPtr );     
   } 
} 



unsigned int enterChoice( void )
{ 
   unsigned int menuChoice; 

   printf( "%s", "\nEnter your choice\n"
      "1 - update an account\n"
      "2 - add a new account\n"
      "3 - delete an account\n"
      "4 - end program\n? " );

   scanf( "%u", &menuChoice ); 
   return menuChoice;
} 

